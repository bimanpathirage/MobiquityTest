{
	"info": {
		"_postman_id": "7a98e9aa-ee24-4dd9-a77a-1c7d64e66b19",
		"name": "Mobiquity_QA_Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get users - Filter by username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Assign user ID to a variable\r",
							"//Assumption - username is unique\r",
							"var data = JSON.parse(responseBody);\r",
							"pm.environment.unset(\"userId\");\r",
							"pm.environment.set(\"userId\", JSON.stringify(data[0].id));\r",
							"\r",
							"//Verify the status code is 'OK'\r",
							"pm.test(\"Successful Get request - Filtered user's details are retrieved\", function () {\r",
							"    pm.response.to.have.status(200) || pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users?username={{userName}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "username",
							"value": "{{userName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get posts - Filter by user ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// //Verify the status code is 'OK'\r",
							"pm.test(\"Successful Get request - All posts created by the filtered user are retrieved\", function () {\r",
							"    pm.response.to.have.status(200) || pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//Assign post IDs to variables\r",
							"var data = JSON.parse(responseBody);\r",
							"//Set the count of all posts by this user as a variable\r",
							"pm.environment.set(\"postCount\", data.length);\r",
							"pm.test(\"ID of each post is saved as a variable\", function () {\r",
							"    for (i=0; i<data.length; i++){\r",
							"        pm.environment.unset(\"postId\"+(i));\r",
							"        pm.environment.set(\"postId\"+(i), JSON.stringify(data[i].id));\r",
							"    }\r",
							"});\r",
							"\r",
							"// let usernames = pm.collectionVariables.get(\"usernames\");\r",
							"// var jsonData = JSON.parse(responseBody);\r",
							"// console.log(jsonData[0].id);\r",
							"// pm.environment.set(\"id1\", jsonData[0].id);\r",
							"\r",
							"// idArray = [];\r",
							"// for (var i=0; i<jsonData.length; i++)\r",
							"// {\r",
							"//     var id = jsonData[i].id;\r",
							"//     //console.log(jsonData[i].site)\r",
							"//     idArray.push(`${id}`);\r",
							"// }\r",
							"// console.log(idArray);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts?userId={{userId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all comments on each post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const postIds = pm.collectionVariables.get(\"postIds\");\r",
							"\r",
							"if (postIds && postIds.length > 0){\r",
							"    console.log(postIds.length)\r",
							"    postman.setNextRequest(\"Get all comments on each post\");\r",
							"} else {\r",
							"    postman.setNextRequest(null);\r",
							"}\r",
							"\r",
							"var data = JSON.parse(responseBody);\r",
							"var nthPost = pm.environment.get(\"postCount\") - postIds.length\r",
							"\r",
							"pm.test(\"Successful Get request - All comments are retrieved for post id \" + nthPost, function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"All emails are of valid format in comments in post id \" + nthPost, function () {\r",
							"    for(i=0; i<data.length; i++){\r",
							"    console.log(data[i].email)\r",
							"    pm.expect(data[i].email).to.match(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/)\r",
							"}\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let postIds = pm.collectionVariables.get(\"postIds\");\r",
							"\r",
							"if(!postIds || postIds.length == 0) {\r",
							"    postIds = [pm.environment.get(\"postId0\"), pm.environment.get(\"postId1\"), pm.environment.get(\"postId2\"), pm.environment.get(\"postId3\"), pm.environment.get(\"postId4\"), pm.environment.get(\"postId5\"), pm.environment.get(\"postId6\"), pm.environment.get(\"postId7\"), pm.environment.get(\"postId8\"), pm.environment.get(\"postId9\")];\r",
							"}\r",
							"\r",
							"let currentpostId = postIds.shift();\r",
							"console.log(currentpostId)\r",
							"pm.collectionVariables.set(\"postId\", currentpostId);\r",
							"pm.collectionVariables.set(\"postIds\", postIds);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/comments?postId={{postId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "{{postId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "usernames",
			"value": ""
		},
		{
			"key": "postId",
			"value": ""
		},
		{
			"key": "postIds",
			"value": ""
		}
	]
}